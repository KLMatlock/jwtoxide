# This is a basic workflow to help you get started with Actions

name: Build and Test

# Controls when the workflow will run
on: 
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build and test
        run: |
          python3 -m venv .venv 
          source .venv/bin/activate
          pip install maturin
          make install-dev
          make test
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.5
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: '${{ matrix.python-version }}-*'
          # rust doesn't seem to be available for musl linux on i686
          CIBW_SKIP: '*-musllinux_i686'
        #   # we build for "alt_arch_name" if it exists, else 'auto'
        #   CIBW_ARCHS: 'auto'
          CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH" CARGO_TERM_COLOR="always"'
        #   CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$PATH"'
        #   CIBW_BEFORE_BUILD: rustup show
          CIBW_BEFORE_BUILD_LINUX: >
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=minimal -y &&
            rustup show
        #   CIBW_TEST_SKIP: '*-macosx_arm64 *-macosx_universal2:arm64'
        #   CIBW_BUILD_VERBOSITY: 1
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      # - name: Build Docker image
      #   run: |
      #     docker run --platform=linux/arm64 \
      #       -v .:/io \
      #       ghcr.io/pyo3/maturin \
      #         build --release --interpreter python${{ matrix.python-version }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          compression-level: 0
          path: |
            target/wheels/*.whl
            wheelhouse/*.whl
